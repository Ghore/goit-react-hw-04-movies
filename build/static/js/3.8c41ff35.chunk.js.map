{"version":3,"sources":["components/css/cast.module.css","components/css/filmDetail.module.css","pages/Cast.js","pages/Reviews.js","components/film/FilmDetail.js","pages/MovieDetailsPage.js"],"names":["module","exports","Cast","state","cast","id","this","props","match","params","movieId","getActors","then","data","setState","className","style","actorsList","map","actor","key","src","profile_path","width","height","name","character","Component","review","getReviews","results","item","author","content","FilmDescription","title","release_date","popularity","overview","genres","poster_path","wrapper","alt","Contentwrapper","genre","MovieDetailsPage","movie","info","goBack","history","push","getMovie","to","pathname","from","qwery","search","url","exact","path","component","Reviews"],"mappings":"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","file":"static/js/3.8c41ff35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorsList\":\"cast_actorsList__3Ph8N\",\"actorsListItem\":\"cast_actorsListItem__1cmLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"filmDetail_wrapper__3tnV-\",\"Contentwrapper\":\"filmDetail_Contentwrapper__2jzH6\",\"genres\":\"filmDetail_genres__45rNp\"};","import React, { Component } from \"react\";\r\nimport { getActors } from \"../services/MovieApi\";\r\nimport style from '../components/css/cast.module.css'\r\nexport default class Cast extends Component {\r\n  state = { cast: [] };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.movieId;\r\n    getActors(id).then((data) => this.setState({ cast: data.data.cast }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className={style.actorsList}>\r\n        {this.state.cast.map((actor) => (\r\n          <li key={actor.id}>\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/w500/\" + actor.profile_path}\r\n              width=\"100px\"\r\n              height=\"auto\"\r\n            />\r\n            <p>{actor.name}</p>\r\n            <p>character: {actor.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getReviews } from \"../services/MovieApi\";\r\n\r\nexport default class Cast extends Component {\r\n  state = { review: [] };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.movieId;\r\n    getReviews(id).then((data) => this.setState({ review: data.data.results }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.state.review.map((item) => (\r\n          <li key={item.id}>\r\n            <p>{item.author}</p>\r\n            <p>{item.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport style from '../css/filmDetail.module.css'\r\n\r\nconst FilmDescription = ({\r\n  title,\r\n  release_date,\r\n  popularity,\r\n  overview,\r\n  genres = [],\r\n  poster_path,\r\n}) => (\r\n  <>\r\n    <div className={style.wrapper}>\r\n      <img\r\n        alt=\"film\"\r\n        src={\"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + poster_path}\r\n      />\r\n     <div className={style.Contentwrapper}>\r\n\r\n    \r\n      <h2>\r\n        {title} ({release_date}){\" \"}\r\n      </h2>\r\n      <p>Popularity {popularity}</p>\r\n      <h2>Overview</h2>\r\n      <p>{overview}</p>\r\n      <h2>Genres</h2>\r\n      <ul className={style.genres}>\r\n        {genres.map((genre) => (\r\n          <li key={genre.id}>{genre.name}</li>\r\n        ))}\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default FilmDescription;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport { getMovie } from \"../services/MovieApi\";\r\nimport Cast from \"../pages/Cast\";\r\nimport Reviews from \"../pages/Reviews\";\r\nimport Film from \"../components/film/FilmDetail\";\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: [],\r\n    info: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.movieId;\r\n    getMovie(id).then((movie) => this.setState({ movie: movie.data }));\r\n  }\r\n  goBack = () => {\r\n    this.props.history.push(\"/\", this.state.info);\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    return (\r\n      <>\r\n        <Film {...movie} />\r\n\r\n        {movie && (\r\n          <div>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${this.props.match.params.movieId}/cast`,\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n            {this.state.info ? (\r\n              <Link\r\n                to={{\r\n                  pathname: `${this.state.info.from}`,\r\n                  state: {\r\n                    qwery: this.state.info.qwery,\r\n                  },\r\n                  search: this.state.info.qwery\r\n                    ? `?qwery=${this.state.info.qwery}`\r\n                    : \"\",\r\n                }}\r\n              >\r\n                Go back link\r\n              </Link>\r\n            ) : (\r\n              <Link\r\n                to={{\r\n                  pathname: \"/\",\r\n                }}\r\n              >\r\n                Go back link\r\n              </Link>\r\n            )}\r\n            <Link\r\n              to={{\r\n                pathname: `${this.props.match.url}/review`,\r\n              }}\r\n            >\r\n              Review\r\n            </Link>\r\n            <Switch>\r\n              <Route exact path={`/movies/:movieId/cast`} component={Cast} />\r\n              <Route\r\n                exact\r\n                path={\"/movies/:movieId/review\"}\r\n                component={Reviews}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}