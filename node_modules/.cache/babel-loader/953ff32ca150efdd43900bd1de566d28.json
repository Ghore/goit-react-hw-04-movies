{"ast":null,"code":"// import React, { Component } from \"react\";\n// import * as MovieApi from '../services/MovieApi'\n// import { Link } from \"react-router-dom\";\n// import queryString from \"query-string\";\n// export default class MoviesPage extends Component {\n//   state = {\n//     query: \"\",\n//     films: [],\n//   };\n//   componentDidMount() {\n//     if (this.props.location.search) {\n//       const getQueryFromLocation = queryString.parse(this.props.location.search)\n//         .query;\n//       this.  getForQuery(getQueryFromLocation);\n//     }\n//   }\n//   handleChange = (e) => {\n//     this.setState({ query: e.target.value });\n//   };\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.  getForQuery(this.state.query);\n//     this.props.history.push({\n//       pathname: this.props.location.pathname,\n//       search: `query=${this.state.query}`,\n//     });\n//   };\n//   getForQuery = (query) => {\n//     MovieApi.getForQuery(query).then((data) =>\n//       this.setState({\n//         films: data.data.results,\n//         query,\n//       })\n//     );\n//   };\n//   render() {\n//     console.log(this.props);\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit}>\n//           <input\n//             value={this.query}\n//             onChange={this.handleChange}\n//             type=\"text\"\n//             placeholder=\"Search movie\"\n//           />\n//           <button type=\"submit\">\n//             <span>Search</span>\n//           </button>\n//         </form>\n//         <ul>\n//           {this.state.films.length > 0 &&\n//             this.state.films.map(\n//               (film) =>\n//                 film.title !== \"UNdefined\" && (\n//                   <li key={film.id}>\n//                     <Link\n//                       to={{\n//                         pathname: `/movies/${film.id}`,\n//                         state: {\n//                           from: this.props.location.pathname,\n//                           query: this.state.query,\n//                         },\n//                       }}\n//                     >\n//                       {film.title}\n//                     </Link>\n//                   </li>\n//                 )\n//             )}\n//         </ul>\n//       </>\n//     );\n//   }\n// }","map":{"version":3,"sources":["D:/GO/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from \"react\";\r\n// import * as MovieApi from '../services/MovieApi'\r\n// import { Link } from \"react-router-dom\";\r\n// import queryString from \"query-string\";\r\n\r\n// export default class MoviesPage extends Component {\r\n//   state = {\r\n//     query: \"\",\r\n//     films: [],\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     if (this.props.location.search) {\r\n//       const getQueryFromLocation = queryString.parse(this.props.location.search)\r\n//         .query;\r\n//       this.  getForQuery(getQueryFromLocation);\r\n//     }\r\n//   }\r\n\r\n//   handleChange = (e) => {\r\n//     this.setState({ query: e.target.value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.  getForQuery(this.state.query);\r\n//     this.props.history.push({\r\n//       pathname: this.props.location.pathname,\r\n//       search: `query=${this.state.query}`,\r\n//     });\r\n//   };\r\n\r\n//   getForQuery = (query) => {\r\n//     MovieApi.getForQuery(query).then((data) =>\r\n//       this.setState({\r\n//         films: data.data.results,\r\n//         query,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     console.log(this.props);\r\n//     return (\r\n//       <>\r\n//         <form onSubmit={this.handleSubmit}>\r\n//           <input\r\n//             value={this.query}\r\n//             onChange={this.handleChange}\r\n//             type=\"text\"\r\n//             placeholder=\"Search movie\"\r\n//           />\r\n//           <button type=\"submit\">\r\n//             <span>Search</span>\r\n//           </button>\r\n//         </form>\r\n//         <ul>\r\n//           {this.state.films.length > 0 &&\r\n//             this.state.films.map(\r\n//               (film) =>\r\n//                 film.title !== \"UNdefined\" && (\r\n//                   <li key={film.id}>\r\n//                     <Link\r\n//                       to={{\r\n//                         pathname: `/movies/${film.id}`,\r\n//                         state: {\r\n//                           from: this.props.location.pathname,\r\n//                           query: this.state.query,\r\n//                         },\r\n//                       }}\r\n//                     >\r\n//                       {film.title}\r\n//                     </Link>\r\n//                   </li>\r\n//                 )\r\n//             )}\r\n//         </ul>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}