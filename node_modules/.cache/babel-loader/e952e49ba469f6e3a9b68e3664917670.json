{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-04-movies\\\\src\\\\pages\\\\MoviesPage.js\";\nimport React, { Component } from \"react\";\nimport { getForQuery } from \"../services/MovieApi\";\nimport { Link } from \"react-router-dom\";\nimport queryString from 'query-string';\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      films: []\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.fetchQueryFilms(this.state.query);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${this.state.query}`\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.search) {\n      const getQueryFromLocation = queryString.parse(this.props.location.search).query;\n      getForQuery(getQueryFromLocation);\n    }\n  }\n\n  // fetchQueryFilms = (query) => {\n  //     filmsApi\n  //         .fetchQueryFilms(query)\n  //         .then(data => this.setState({\n  //             films: data.data.results, query\n  //         }))\n  // }\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.query,\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Search movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.state.films.length > 0 && this.state.films.map(film => film.title !== \"UNdefined\" && /*#__PURE__*/React.createElement(\"li\", {\n      key: film.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/movies/${film.id}`,\n        state: {\n          from: this.props.location.pathname,\n          query: this.state.query\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, film.title)))));\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":["React","Component","getForQuery","Link","queryString","MoviesPage","state","query","films","handleChange","e","setState","target","value","handleSubmit","preventDefault","fetchQueryFilms","props","history","push","pathname","location","search","componentDidMount","getQueryFromLocation","parse","render","console","log","length","map","film","title","id","from"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CK,KAD8C,GACtC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADsC;;AAAA,SAe9CC,YAf8C,GAe/BC,CAAC,IAAI;AAChB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACH,KAjB6C;;AAAA,SAoB9CC,YApB8C,GAoB9BJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKC,eAAL,CAAqB,KAAKV,KAAL,CAAWC,KAAhC;AACA,WAAKU,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,QAAAA,QAAQ,EAAC,KAAKH,KAAL,CAAWI,QAAX,CAAoBD,QAA9B;AAAwCE,QAAAA,MAAM,EAAE,SAAQ,KAAKhB,KAAL,CAAWC,KAAM;AAAzE,OAAxB;AAEH,KAzB6C;AAAA;;AAM9CgB,EAAAA,iBAAiB,GAAG;AACjB,QAAI,KAAKN,KAAL,CAAWI,QAAX,CAAoBC,MAAxB,EAAgC;AAClC,YAAME,oBAAoB,GACtBpB,WAAW,CAACqB,KAAZ,CAAkB,KAAKR,KAAL,CAAWI,QAAX,CAAoBC,MAAtC,EAA8Cf,KADlD;AAEIL,MAAAA,WAAW,CAACsB,oBAAD,CAAX;AACF;AAEF;;AAeD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,wBAEI,uDACI;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAE,KAAKP,KADhB;AAEI,MAAA,QAAQ,EAAE,KAAKE,YAFnB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAPJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWE,KAAX,CAAiBqB,MAAjB,GAA0B,CAA1B,IACD,KAAKvB,KAAL,CAAWE,KAAX,CAAiBsB,GAAjB,CAAsBC,IAAD,IACjBA,IAAI,CAACC,KAAL,KAAe,WAAf,iBACA;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACNb,QAAAA,QAAQ,EAAG,WAAUW,IAAI,CAACE,EAAG,EADvB;AAEN3B,QAAAA,KAAK,EAAE;AAAC4B,UAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWI,QAAX,CAAoBD,QAA3B;AAAqCb,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAAvD;AAFD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIwB,IAAI,CAACC,KAHT,CADJ,CAFJ,CAFJ,CAZJ,CAFJ;AA4BH;;AAnE6C","sourcesContent":["import React, {Component} from \"react\";\r\nimport { getForQuery } from \"../services/MovieApi\";\r\nimport {Link} from \"react-router-dom\";\r\nimport queryString from 'query-string';\r\n\r\nexport default class MoviesPage extends Component {\r\n    state = {\r\n        query: '',\r\n        films: []\r\n    }\r\n\r\n    componentDidMount() {\r\n       if( this.props.location.search ){\r\n     const getQueryFromLocation =\r\n         queryString.parse(this.props.location.search).query;\r\n         getForQuery(getQueryFromLocation)\r\n      }\r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({query: e.target.value})\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.fetchQueryFilms(this.state.query);\r\n        this.props.history.push({pathname:this.props.location.pathname, search:`query=${this.state.query}`})\r\n\r\n    }\r\n\r\n\r\n    // fetchQueryFilms = (query) => {\r\n\r\n    //     filmsApi\r\n    //         .fetchQueryFilms(query)\r\n    //         .then(data => this.setState({\r\n    //             films: data.data.results, query\r\n    //         }))\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n\r\n            <>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        value={this.query}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"Search movie\"\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <span>Search</span>\r\n                    </button>\r\n                </form>\r\n                <ul>\r\n                    {this.state.films.length > 0 &&\r\n                    this.state.films.map((film) =>\r\n                        film.title !== \"UNdefined\" &&\r\n                        <li key={film.id}>\r\n                            <Link to={{\r\n                                pathname: `/movies/${film.id}`,\r\n                                state: {from: this.props.location.pathname, query: this.state.query}\r\n                            }}>{film.title}</Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}