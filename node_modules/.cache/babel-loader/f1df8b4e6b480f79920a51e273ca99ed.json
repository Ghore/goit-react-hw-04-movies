{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-04-movies\\\\src\\\\pages\\\\MoviesPage.js\";\nimport React, { Component } from \"react\";\nimport * as MovieApi from \"../services/MovieApi\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      films: []\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.getForQuery(this.state.query);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${this.state.query}`\n      });\n    };\n\n    this.getForQuery = query => {\n      MovieApi.getForQuery(query).then(data => this.setState({\n        films: data.data.results,\n        query\n      }));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.search) {\n      const locationQuery = queryString.parse(this.props.location.search).query;\n      this.getForQuery(locationQuery);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.info ? /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `${this.state.info.from}`,\n        state: {\n          qwery: this.state.info.qwery\n        },\n        search: this.state.info.qwery ? `?qwery=${this.state.info.qwery}` : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Go back link\") : /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Go back link\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.query,\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Search movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.state.films.length > 0 && this.state.films.map(film => film.title !== \"Undefined\" && /*#__PURE__*/React.createElement(\"li\", {\n      key: film.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/movies/${film.id}`,\n        state: {\n          from: this.props.location.pathname,\n          query: this.state.query\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, film.title)))));\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":["React","Component","MovieApi","Link","queryString","MoviesPage","state","query","films","handleChange","e","setState","target","value","handleSubmit","preventDefault","getForQuery","props","history","push","pathname","location","search","then","data","results","componentDidMount","locationQuery","parse","render","info","from","qwery","length","map","film","title","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as MovieApi from \"../services/MovieApi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    films: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.search) {\r\n      const locationQuery = queryString.parse(this.props.location.search).query;\r\n      this.getForQuery(locationQuery);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.getForQuery(this.state.query);\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `query=${this.state.query}`,\r\n    });\r\n  };\r\n\r\n  getForQuery = (query) => {\r\n    MovieApi.getForQuery(query).then((data) =>\r\n      this.setState({\r\n        films: data.data.results,\r\n        query,\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n       {this.state.info ? (\r\n              <Link\r\n                to={{\r\n                  pathname: `${this.state.info.from}`,\r\n                  state: {\r\n                    qwery: this.state.info.qwery,\r\n                  },\r\n                  search: this.state.info.qwery\r\n                    ? `?qwery=${this.state.info.qwery}`\r\n                    : \"\",\r\n                }}\r\n              >\r\n                Go back link\r\n              </Link>\r\n            ) : (\r\n              <Link\r\n                to={{\r\n                  pathname: \"/\",\r\n                }}\r\n              >\r\n                Go back link\r\n              </Link>\r\n            )}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            value={this.query}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Search movie\"\r\n          />\r\n          <button type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <ul>\r\n          {this.state.films.length > 0 &&\r\n            this.state.films.map(\r\n              (film) =>\r\n                film.title !== \"Undefined\" && (\r\n                  <li key={film.id}>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movies/${film.id}`,\r\n                        state: {\r\n                          from: this.props.location.pathname,\r\n                          query: this.state.query,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {film.title}\r\n                    </Link>\r\n                  </li>\r\n                )\r\n            )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}